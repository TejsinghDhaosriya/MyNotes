[{"/home/asus/WorkArea/React & Django/mynotes/frontend/src/App.js":"1","/home/asus/WorkArea/React & Django/mynotes/frontend/src/index.js":"2","/home/asus/WorkArea/React & Django/mynotes/frontend/src/reportWebVitals.js":"3","/home/asus/WorkArea/React & Django/mynotes/frontend/src/components/ListNotes.js":"4","/home/asus/WorkArea/React & Django/mynotes/frontend/src/api.js":"5","/home/asus/WorkArea/React & Django/mynotes/frontend/src/components/Note.js":"6","/home/asus/WorkArea/React & Django/mynotes/frontend/src/components/EditNoteForm.js":"7","/home/asus/WorkArea/React & Django/mynotes/frontend/src/components/AddNoteForm.js":"8"},{"size":2986,"mtime":1608138588144,"results":"9","hashOfConfig":"10"},{"size":570,"mtime":1607960236685,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607959526113,"results":"12","hashOfConfig":"10"},{"size":503,"mtime":1608049550506,"results":"13","hashOfConfig":"10"},{"size":1095,"mtime":1608051605973,"results":"14","hashOfConfig":"10"},{"size":155,"mtime":1608053133964,"results":"15","hashOfConfig":"10"},{"size":437,"mtime":1608124083265,"results":"16","hashOfConfig":"10"},{"size":1244,"mtime":1608124019195,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1iywk7",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"/home/asus/WorkArea/React & Django/mynotes/frontend/src/App.js",["38"],"import React, { Component } from 'react';\nimport { Button, Container, Row, Col } from 'reactstrap';\n\nimport ListNotes from './components/ListNotes';\nimport AddNoteForm from './components/AddNoteForm';\n\nimport { fetchNotes, fetchNote, updateNote, addNote } from './api';\nimport Websocket from 'react-websocket';\nimport EditNoteForm from './components/EditNoteForm';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      notes: [],\n      note: {},\n      current_note_id: 0,\n      is_creating: true,\n      is_fetching: true,\n    }\n\n    this.handleItemClick = this.handleItemClick.bind(this);\n    this.handleAddNote = this.handleAddNote.bind(this);\n    this.getData = this.getData.bind(this);\n    this.handleSaveNote = this.handleSaveNote.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async getData() {\n    let data = await fetchNotes();\n    this.setState({notes: data, is_fetching: false});\n  }\n\n  async handleItemClick(id) {\n    let selected_note = await fetchNote(id);\n\n    this.setState((prevState) => {\n      return {\n        is_creating: false, \n        current_note_id: id,\n        note: selected_note\n      }\n    })\n  }\n\n  handleAddNote() {\n    this.setState((prevState) => {\n      return {is_creating: true}\n    })\n  }\n\n  async handleSaveNote(data) {\n    await addNote(data);\n    await this.getData();\n  }\n\n  handleData(data) {\n    let result = JSON.parse(data);\n\n    let current_note = this.state.note;\n    if(current_note.id === result.id) {\n      this.setState({note: result});\n    }\n  }\n\n  handleOnChange(e) {\n    let content = e.target.value;\n    let current_note = this.state.note;\n    current_note.content = content;\n\n    this.setState({\n      note: current_note\n    });\n\n    const socket = this.refs.socket;\n    socket.state.ws.send(JSON.stringify(current_note));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Container>\n          <Row>\n            <Col xs=\"10\">\n              <h2>Realtime notes</h2>\n            </Col>\n            <Col xs=\"2\">\n              <Button color=\"primary\" onClick={this.handleAddNote}>Create a new note</Button>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs=\"4\">\n            {\n              this.state.is_fetching ?\n              \"Loading...\" :\n              <ListNotes notes={this.state.notes} handleItemClick={(id) => this.handleItemClick(id)} />\n            }\n            </Col>\n            <Col xs=\"8\">\n              {\n                this.state.is_creating ?\n                <AddNoteForm handleSave={this.handleSaveNote}/> :\n                <EditNoteForm handleChange={this.handleOnChange} note={this.state.note}/>\n              }\n              <Websocket ref=\"socket\" url='ws://127.0.0.1:8000/ws/notes'\n              onMessage={this.handleData.bind(this)}/>\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","/home/asus/WorkArea/React & Django/mynotes/frontend/src/index.js",[],"/home/asus/WorkArea/React & Django/mynotes/frontend/src/reportWebVitals.js",[],"/home/asus/WorkArea/React & Django/mynotes/frontend/src/components/ListNotes.js",[],"/home/asus/WorkArea/React & Django/mynotes/frontend/src/api.js",[],"/home/asus/WorkArea/React & Django/mynotes/frontend/src/components/Note.js",["39"],"import React from 'react';\n\n\nconst Note =({title})=>(\n    <React.Fragment>\n        <a href=\"#\" >{title}</a>\n    </React.Fragment>\n)\n\n\n\nexport default Note;","/home/asus/WorkArea/React & Django/mynotes/frontend/src/components/EditNoteForm.js",["40"],"/home/asus/WorkArea/React & Django/mynotes/frontend/src/components/AddNoteForm.js",["41"],"import React ,{Fragement}from 'react';\nimport { Button,Form,FormGroup,Label,Input} from 'reactstrap';\n\nclass AddNoteForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            title:'',\n            content:''\n        }\n    this.handleChange=this.handleChange.bind(this)\n    }\n\nhandleSubmit=(e)=>{\n    e.preventDefault();\n    this.props.handleSave(this.state);\n\n    //CLear the inputs\n    this.setState({\n        title:'',\n        content:''\n    })\n}\nhandleChange(e){\n    this.setState({\n        [e.target.name]:e.target.value\n    })\n}\nrender(){\n    return(\n        <React.Fragment>\n            <Form onSubmit={this.handleSubmit}>\n                <FormGroup>\n                    <Label>Title</Label>\n                    <Input onChange={this.handleChange} name=\"title\" type=\"text\" value={this.state.title}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label>Content</Label>\n                    <Input onChange={this.handleChange} name=\"content\" type=\"textarea\" value={this.state.content}/>\n                </FormGroup>\n\n                <Button color=\"success\">Save</Button>\n            </Form>\n        </React.Fragment>\n    )\n}\n\n\n\n}\n\n\nexport default AddNoteForm;",["42","43"],{"ruleId":"44","severity":1,"message":"45","line":7,"column":33,"nodeType":"46","messageId":"47","endLine":7,"endColumn":43},{"ruleId":"48","severity":1,"message":"49","line":6,"column":9,"nodeType":"50","endLine":6,"endColumn":22},{"ruleId":"44","severity":1,"message":"51","line":2,"column":49,"nodeType":"46","messageId":"47","endLine":2,"endColumn":57},{"ruleId":"44","severity":1,"message":"52","line":1,"column":16,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},"no-unused-vars","'updateNote' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'CardTest' is defined but never used.","'Fragement' is defined but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-global-assign","no-unsafe-negation"]